{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useCallback}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Button from\"react-native-web/dist/exports/Button\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Alert from\"react-native-web/dist/exports/Alert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoListScreen=function TodoListScreen(_ref){var route=_ref.route;var _route$params=route.params,list=_route$params.list,updateList=_route$params.updateList;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState(list.tasks||[]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];var memoizedUpdateList=useCallback(function(updatedList){updateList(updatedList);},[updateList]);useEffect(function(){memoizedUpdateList(_objectSpread(_objectSpread({},list),{},{tasks:tasks}));},[list,tasks,memoizedUpdateList]);var addTask=function addTask(){if(task.trim()!==''){var newTask={id:Date.now().toString(),text:task};setTasks([].concat(_toConsumableArray(tasks),[newTask]));setTask('');updateList(_objectSpread(_objectSpread({},list),{},{tasks:[].concat(_toConsumableArray(tasks),[newTask])}));}};var removeTask=function removeTask(taskId){setTasks(tasks.filter(function(t){return t.id!==taskId;}));updateList(_objectSpread(_objectSpread({},list),{},{tasks:tasks.filter(function(t){return t.id!==taskId;})}));};var editTask=function editTask(taskId,newText){setTasks(function(prevTasks){return prevTasks.map(function(task){return task.id===taskId?_objectSpread(_objectSpread({},task),{},{text:newText}):task;});});updateList(_objectSpread(_objectSpread({},list),{},{tasks:tasks.map(function(t){return t.id===taskId?_objectSpread(_objectSpread({},t),{},{text:newText}):t;})}));};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.taskTitle,children:list.name}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter task\",value:task,onChangeText:function onChangeText(text){return setTask(text);}}),_jsx(Button,{title:\"Add Task\",onPress:addTask}),_jsx(FlatList,{data:tasks,keyExtractor:function keyExtractor(item){return item.id;},renderItem:function renderItem(_ref2){var item=_ref2.item;return _jsxs(View,{style:styles.taskItem,children:[_jsx(Text,{style:styles.editableText,numberOfLines:null,children:item.text}),_jsxs(View,{style:styles.buttonContainer,children:[_jsx(Button,{title:\"Remove\",onPress:function onPress(){return removeTask(item.id);}}),_jsx(Button,{title:\"Edit\",onPress:function onPress(){Alert.prompt('Enter new name:',item.text,function(newText){if(newText!==null&&newText!==item.text){editTask(item.id,newText);}});}})]})]});}})]});};var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center',justifyContent:'center',padding:16},taskTitle:{fontSize:20,fontWeight:'bold',marginBottom:8},input:{borderWidth:1,borderColor:'#ccc',marginBottom:8,paddingHorizontal:8,width:'80%'},taskItem:{flexDirection:'row',alignItems:'center',borderWidth:1,borderColor:'#ccc',padding:8,textAlign:'center',minWidth:'80%'},editableText:{flex:1,borderWidth:1,borderColor:'#ccc',textAlign:'center'},buttonContainer:{flexDirection:'row'}});export default TodoListScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","Button","TextInput","FlatList","StyleSheet","TouchableOpacity","Alert","jsx","_jsx","jsxs","_jsxs","TodoListScreen","_ref","route","_route$params","params","list","updateList","_useState","_useState2","_slicedToArray","task","setTask","_useState3","tasks","_useState4","setTasks","memoizedUpdateList","updatedList","_objectSpread","addTask","trim","newTask","id","Date","now","toString","text","concat","_toConsumableArray","removeTask","taskId","filter","t","editTask","newText","prevTasks","map","style","styles","container","children","taskTitle","name","input","placeholder","value","onChangeText","title","onPress","data","keyExtractor","item","renderItem","_ref2","taskItem","editableText","numberOfLines","buttonContainer","prompt","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","borderWidth","borderColor","paddingHorizontal","width","flexDirection","textAlign","minWidth"],"sources":["/Users/aidangor/MindCentric/Screens/TodoListScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { View, Text, Button, TextInput, FlatList, StyleSheet, TouchableOpacity, Alert } from 'react-native';\n\nconst TodoListScreen = ({ route }) => {\n  const { list, updateList } = route.params; // Used in order to render tasks from pressed list\n  const [task, setTask] = useState(''); // Hook for creating a task before storing it\n  const [tasks, setTasks] = useState(list.tasks || []); // Hook for storage of tasks through an array of objects\n\n  const memoizedUpdateList = useCallback(\n    (updatedList) => {\n      updateList(updatedList);\n    },\n    [updateList]\n  );\n\n  useEffect(() => {\n    memoizedUpdateList({ ...list, tasks });\n  }, [list, tasks, memoizedUpdateList]);\n\n  const addTask = () => { // CREATE: Adds a new task\n    if (task.trim() !== '') {\n      const newTask = { id: Date.now().toString(), text: task };\n      setTasks([...tasks, newTask]);\n      setTask('');\n      updateList({ ...list, tasks: [...tasks, newTask] });\n    }\n  };\n\n  const removeTask = (taskId) => { // DELETE: Removes a specific task based on taskID from input\n    setTasks(tasks.filter((t) => t.id !== taskId));\n    updateList({ ...list, tasks: tasks.filter((t) => t.id !== taskId) });\n  };\n\n  const editTask = (taskId, newText) => { // UPDATE: Edits name of task through mapping all tasks but renaming the task that matches with the inputted taskID\n    setTasks((prevTasks) =>\n      prevTasks.map((task) => (task.id === taskId ? { ...task, text: newText } : task))\n    );\n    updateList({ ...list, tasks: tasks.map((t) => (t.id === taskId ? { ...t, text: newText } : t)) });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.taskTitle}>{list.name}</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter task\"\n        value={task}\n        onChangeText={(text) => setTask(text)}\n      />\n      <Button title=\"Add Task\" onPress={addTask} />\n      {/* READ: displays task name and options to update or remove task */}\n      <FlatList\n        data={tasks}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <View style={styles.taskItem}>\n           <Text style={styles.editableText} numberOfLines={null}>\n            {item.text}\n          </Text>\n            <View style={styles.buttonContainer}>\n              <Button title=\"Remove\" onPress={() => removeTask(item.id)} />\n              <Button\n                title=\"Edit\"\n                onPress={() => {\n                  Alert.prompt('Enter new name:', item.text, (newText) => {\n                    if (newText !== null && newText !== item.text) {\n                      editTask(item.id, newText);\n                    }\n                  });\n                }}\n              />\n            </View>\n          </View>\n        )}\n      />\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n  },\n  taskTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginBottom: 8,\n    paddingHorizontal: 8,\n    width: '80%',\n  },\n  taskItem: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 8,\n    textAlign: 'center',\n    minWidth: '80%',\n  },\n  \n  editableText: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    textAlign: 'center',\n  },\n  \n  buttonContainer: {\n    flexDirection: 'row',\n  },\n});\n\nexport default TodoListScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}